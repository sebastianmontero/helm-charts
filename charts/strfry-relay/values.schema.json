{
  "$schema": "https://json-schema.org/draft-07/schema#",
  "properties": {
    "nameOverride": {
      "description": "If specified replaces chart name when creating full name used for the names of all components",
      "type": "string"
    },
    "fullnameOverride": {
      "description": "If specified its value is used for the names of all components",
      "type": "string"
    },
    "url":{
      "description": "Url details",
      "properties": {
        "domain": {
          "description": "Domain Details",
          "properties": {
            "base": {
              "type": "string",
              "pattern": "^([a-z0-9]+(-[a-z0-9]+)*\\.)+[a-z]{2,}$"
            },
            "subdomain": {
              "type": "string",
              "pattern": "^([a-z0-9]+(-[a-z0-9]+)*)+$"
            }
          },
          "required": [
            "base",
            "subdomain"
          ],
          "type": "object"
        }
      },
      "required": [
        "domain"
      ],
      "type": "object"
    },
    "ingress": {
      "description": "Ingress Details",
      "properties": {
        "enabled": {
          "type": "boolean"
        }
      },
      "required": [
        "enabled"
      ],
      "type": "object"
    },
    "relay": {
      "description": "Relay related properties",
      "properties": {
        "info": {
          "description": "Relay NIP11 related properties",
          "properties": {
            "name":{
              "type":"string",
              "pattern": ".{3,}$"
            },
            "description":{
              "type":"string",
              "pattern": ".{5,}$"
            },
            "pubkey":{
              "type":"string",
              "pattern": "^[a-f0-9]{64,64}$"
            },
            "contact":{
              "type":"string",
              "pattern": ".{3,}$"
            }
          },
          "required": [
            "name",
            "description",
            "pubkey",
            "contact"
          ],
          "type": "object"
        }
      },
      "required": [
        "info"
      ],
      "type": "object"
    },
    "storage": {
      "description": "Storage related properties",
      "properties": {
        "size": {
          "type": "string"
        },
        "class": {
          "type": "string",
          "pattern": "^[a-z0-9-_/]+$"
        }
      },
      "required": [
        "size",
        "class"
      ],
      "type": "object"
    },
    "image": {
      "description": "Image Details",
      "properties": {
        "repository": {
          "type": "string",
          "pattern": "^[a-z0-9-_/]+$"
        },
        "pullPolicy": {
          "type": "string",
          "pattern": "^(Always|Never|IfNotPresent)$"
        },
        "tag": {
          "type": "string",
          "pattern": "^[a-z0-9-_\\.]+$"
        }
      },
      "required": [
        "repository",
        "pullPolicy",
        "tag"
      ],
      "type": "object"
    },
    "serviceAccountName": {
      "description": "Service account to use for the statefulset",
      "type": "string",
      "pattern": "^[a-z0-9-]+$"
    },
    "relays": {
      "type": "string",
      "pattern": "^\\[(ws:\\/\\/[\\w\\.-]+(:\\d+)?|wss:\\/\\/[\\w\\.-]+(:\\d+)?)(,(ws:\\/\\/[\\w\\.-]+(:\\d+)?|wss:\\/\\/[\\w\\.-]+(:\\d+)?))*\\]$",
      "description": "A string representing an array of relay URLs. Should be a comma-separated list enclosed in square brackets, each should represent a websocket url."
    },
    "bucketName": {
      "type": "string",
      "minLength": 1,
      "description": "The name of the S3 bucket."
    },
    "allowedEvents": {
      "type": "string",
      "pattern": "^\\[[0-9\\,\\s]+\\]$",
      "description": "A string representing an array of allowed event kinds. Should be a comma-separated list enclosed in square brackets."
    },
    "backupStartDelay": {
      "type": "string",
      "pattern": "^[1-9][0-9]?[smhd]$",
      "description": "The initial delay before the first backup"
    },
    "backupInterval": {
      "type": "string",
      "pattern": "^[1-9][0-9]?[smhd]$",
      "description": "The interval between backups"
    },
    "syncStartDelay": {
      "type": "string",
      "pattern": "^[1-9][0-9]?[smhd]$",
      "description": "The initial delay before the first sync"
    },
    "syncInterval": {
      "type": "string",
      "pattern": "^[1-9][0-9]?[smhd]$",
      "description": "The interval between syncs"
    },
    "whitelistPubkeys": {
      "type": "string",
      "pattern": "^\\[\"([a-zA-Z0-9]+)\"(,\"([a-zA-Z0-9]+)\")*\\]$",
      "description": "A string representing an array of whitelisted (hex) pubkeys. Should be a comma-separated list enclosed in square brackets."
    },
    "rateLimit": {
      "type": "number",
      "minimum": 1,
      "description": "The default limit of requests per window of time"
    },
    "rateLimitExpiry": {
      "type": "number",
      "minimum": 1,
      "description": "The default window of time in seconds"
    },
    "hitLimit": {
      "type": "number",
      "minimum": 1,
      "description": "The default limit of hits per window of time"
    },
    "hitExpiry": {
      "type": "number",
      "minimum": 1,
      "description": "The default window of time in seconds"
    },
   "limitPerKind": {
    "type": "string",
     "pattern": "/^\\{\"\\d+\":\\d+(,\\s*\"\\d+\":\\d+)*\\}$/",
     "description": "A string representing a map of limits per event kind. Should be a comma-separated list of key-value pairs enclosed in curly brackets, where the key is the event kind and the value is the limit."
   },
    "expiryPerKind": {
      "type": "string",
      "pattern": "/^\\{\"\\d+\":\\d+(,\\s*\"\\d+\":\\d+)*\\}$/",
      "description": "A string representing a map of expiries per event kind. Should be a comma-separated list of key-value pairs enclosed in curly brackets, where the key is the event kind and the value is the expiry interval in seconds."
    },
    "hitLimitPerKind": {
      "type": "string",
      "pattern": "/^\\{\"\\d+\":\\d+(,\\s*\"\\d+\":\\d+)*\\}$/",
      "description": "A string representing a map of hit limits per event kind. Should be a comma-separated list of key-value pairs enclosed in curly brackets, where the key is the event kind and the value is the limit."
    },
    "hitExpiryPerKind": {
      "type": "string",
      "pattern": "/^\\{\"\\d+\":\\d+(,\\s*\"\\d+\":\\d+)*\\}$/",
      "description": "A string representing a map of hit expiries per event kind. Should be a comma-separated list of key-value pairs enclosed in curly brackets, where the key is the event kind and the value is the expiry interval in seconds."
    }
     },
  "title": "Values",
  "required": [
    "url",
    "ingress",
    "image"
  ],
  "type": "object"
}