{
  "$schema": "https://json-schema.org/draft-07/schema#",
  "properties": {
    "nameOverride": {
      "description": "If specified replaces chart name when creating full name used for the names of all components",
      "type": "string"
    },
    "fullnameOverride": {
      "description": "If specified its value is used for the names of all components",
      "type": "string"
    },
    "url":{
      "description": "Url details",
      "properties": {
        "domain": {
          "description": "Domain Details",
          "properties": {
            "base": {
              "type": "string",
              "pattern": "^([a-z0-9]+(-[a-z0-9]+)*\\.)+[a-z]{2,}$"
            },
            "prometheus": {
              "type": "string",
              "pattern": "^([a-z0-9]+(-[a-z0-9]+)*)+[a-z]{1,}$"
            }
          },
          "required": [
            "base",
            "prometheus"
          ],
          "type": "object"
        }
      },
      "required": [
        "domain"
      ],
      "type": "object"
    },
    "ingress": {
      "description": "Ingress Details",
      "properties": {
        "enabled": {
          "type": "boolean"
        }
      },
      "required": [
        "enabled"
      ],
      "type": "object"
    },
    "env": {
      "description": "Environment variables",
      "properties": {
        "firehoseEndpoint": {
          "type": "string",
          "pattern": "^[\\w.-]+(?:\\.[\\w\\.-]+)+[\\w\\-\\._~:/?#[\\]@!\\$&'\\(\\)\\*\\+,;=.]+$"
        },
        "eosEndpoint": {
          "type": "string",
          "pattern": "^(http(s)?:\\/\\/)[\\w.-]+(?:\\.[\\w\\.-]+)+[\\w\\-\\._~:/?#[\\]@!\\$&'\\(\\)\\*\\+,;=.]+$"
        },
        "elasticEndpoint": {
          "type": "string",
          "pattern": "^(http(s)?:\\/\\/)[\\w.-]+(?:\\.[\\w\\.-]+)+[\\w\\-\\._~:/?#[\\]@!\\$&'\\(\\)\\*\\+,;=.]+$"
        },
        "elasticCA": {
          "type": "string"
        },
        "prometheusPort": {
          "type": "integer",
          "minimum": 1
        },
        "startBlock": {
          "type": "integer",
          "minimum": 1
        },
        "heartBeatFrequency": {
          "type": "integer",
          "minimum": 10
        },
        "dfuseApiKey": {
          "type": "string",
          "pattern": "^[a-zA-Z0-9_]*$"
        },
        "dfuseAuthURL": {
          "type": "string",
          "pattern": "^(http(s)?:\\/\\/)[\\w.-]+(?:\\.[\\w\\.-]+)+[\\w\\-\\._~:/?#[\\]@!\\$&'\\(\\)\\*\\+,;=.]+$"
        },
        "esUser": {
          "type": "string",
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "esPassword": {
          "type": "string",
          "pattern": "^[A-Za-z\\d@$!%*#?&]{8,}$"
        },
        "cursorIndexPrefix": {
          "type": "string",
          "pattern": "^[a-zA-Z0-9-]+$"
        },
        "addIntsAsStrings": {
          "type": "boolean"
        },
        "contracts": {
          "description": "Contract related Details",
          "type": "array",
          "items": {
            "properties": {
              "name": {
                "type": "string",
                "pattern": "^[a-z1-5\\.]{1,12}$"
              },
              "docTableName": {
                "type": "string",
                "pattern": "^[a-z1-5\\.]{1,12}$"
              },
              "indexPrefix": {
                "type": "string",
                "pattern": "^[a-zA-Z0-9-]+$"
              },
              "edgeBlackList": {
                "description": "Edge Black List related Details",
                "type": "array",
                "items": {
                  "properties": {
                    "from": {
                      "type": "string",
                      "pattern": "^[a-zA-Z1-5*]{1,12}$"
                    },
                    "to": {
                      "type": "string",
                      "pattern": "^[a-zA-Z1-5*]{1,12}$"
                    },
                    "name": {
                      "type": "string",
                      "pattern": "^[a-zA-Z1-5*]{1,12}$"
                    }
                  },
                  "required": [
                    "from",
                    "to",
                    "name"
                  ],
                  "type": "object"
                }
              }
            },
            "required": [
              "name",
              "docTableName",
              "edgeTableName",
              "indexPrefix"
            ],
            "type": "object"
          }
        },
        "singleTextSearchField": {
          "description": "Single Text Search Field Details",
          "properties": {
            "asset": {
              "type": "string",
              "enum": ["none", "include", "replace"]
            },
            "checksum256": {
              "type": "string",
              "enum": ["none", "include", "replace"]
            },
            "int64": {
              "type": "string",
              "enum": ["none", "include", "replace"]
            },
            "name": {
              "type": "string",
              "enum": ["none", "include", "replace"]
            },
            "string": {
              "type": "string",
              "enum": ["none", "include", "replace"]
            },
            "time_point": {
              "type": "string",
              "enum": ["none", "include", "replace"]
            }
          },
          "additionalProperties": false
        }
      },
      "required": [
        "firehoseEndpoint",
        "eosEndpoint",
        "elasticEndpoint",
        "prometheusPort",
        "startBlock",
        "heartBeatFrequency",
        "esUser",
        "esPassword",
        "cursorIndexPrefix",
        "contracts"
      ],
      "type": "object"
    },
    "image": {
      "description": "Image Details",
      "properties": {
        "repository": {
          "type": "string",
          "pattern": "^[a-z0-9-_/]+$"
        },
        "pullPolicy": {
          "type": "string",
          "pattern": "^(Always|Never|IfNotPresent)$"
        },
        "tag": {
          "type": "string",
          "pattern": "^[a-z0-9-_\\.]+$"
        }
      },
      "required": [
        "repository",
        "pullPolicy",
        "tag"
      ],
      "type": "object"
    }
  },
  "required": [
    "url",
    "env",
    "image",
    "ingress"
  ],
  "title": "Values",
  "type": "object"
}